#Использовать 1commands
#Использовать logos

Перем фСервер;
Перем фПользователь;
Перем фПароль;
Перем фИмяБазы;

Перем фВыводКоманды;

Перем фЛог;

// Получить имя лога продукта
//
// Возвращаемое значение:
//  Строка   - имя лога продукта
//
Функция ИмяЛога() Экспорт
	Возврат "oscript.app.РаботаСSQL";
КонецФункции

Процедура УстановитьСервер( Знач пСервер ) Экспорт
	фСервер = пСервер;
	фЛог.Отладка( "Установлен сервер: " + фСервер );
КонецПроцедуры

Процедура УстановитьПользователя( Знач пПользователь ) Экспорт
	фПользователь = пПользователь;
	фЛог.Отладка( "Установлен пользователь: " + фПользователь );
КонецПроцедуры

Процедура УстановитьПароль( Знач пПароль ) Экспорт
	фПароль = пПароль;
	Если фПароль = "" Тогда
		фЛог.Отладка( "Установлен пароль: " );
	Иначе
		фЛог.Отладка( "Установлен пароль" );
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьИмяБазы( Знач пИмяБазы ) Экспорт
	фИмяБазы = пИмяБазы;
	фЛог.Отладка( "Установлен сервер " + фИмяБазы );
КонецПроцедуры

Функция ПроверитьЗаполнение( Знач пПроверятьИмяБазы )
	
	отказ = Ложь;

	Если Не ЗначениеЗаполнено( фСервер ) Тогда
		
		фЛог.Ошибка( "Сервер не указан" );
		отказ = Истина;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( фПользователь ) Тогда
		
		фЛог.Ошибка( "Пользователь не указан" );
		отказ = Истина;
		
	КонецЕсли;

	Если пПроверятьИмяБазы
		И Не ЗначениеЗаполнено( фИмяБазы ) Тогда
		
		фЛог.Ошибка( "Имя базы для бекапа не указано" );
		отказ = Истина;
		
	КонецЕсли;

	Возврат Не отказ;

КонецФункции

Функция ВыполнитьБекап( Знач пИмяФайлаБекапа ) Экспорт
	
	отказ = Ложь;

	Если Не ПроверитьЗаполнение( Истина ) Тогда
		отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пИмяФайлаБекапа ) Тогда
		
		фЛог.Ошибка( "Файл для бекапа не указан" );
		отказ = Истина;
		
	КонецЕсли;

	Если отказ Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	параметрСТекстомЗапроса = "-Q""" + ТекстЗапроса_ВыполнитьБекап( фИмяБазы, пИмяФайлаБекапа ) + """";
	
	Возврат ВыполнитьЧерезSQLCMD( параметрСТекстомЗапроса );
	
КонецФункции

Функция ПолучитьКоличествоСоединений() Экспорт
	
	Если Не ПроверитьЗаполнение( Истина ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//параметрСТекстомЗапроса = "-Q""" + ТекстЗапроса_ВыполнитьБекап( фИмяБазы, пИмяФайлаБекапа ) + """";
	
	//Возврат ВыполнитьЧерезSQLCMD( параметрСТекстомЗапроса );

КонецФункции

Функция ВыполнитьСкрипт( Знач пИмяФайлаСкрипта ) Экспорт
	
	отказ = Ложь;

	Если Не ПроверитьЗаполнение( Истина ) Тогда
		отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пИмяФайлаСкрипта ) Тогда		
		фЛог.Ошибка( "Файл скрипта не указан" );
		отказ = Истина;		
	КонецЕсли;

	Если отказ Тогда
		Возврат Ложь;
	КонецЕсли;
	
	текстЗапроса = ОбщегоНазначения.ПолучитьТекстИзФайла( пИмяФайлаСкрипта );
	
	Если текстЗапроса = Ложь Тогда
		фЛог.Ошибка( "Не удалось прочитать текст запроса из " + пИмяФайлаСкрипта );
		Возврат Ложь;
	КонецЕсли;
	
	параметрСТекстомЗапроса = "-i """ + пИмяФайлаСкрипта + """";
	
	Возврат ВыполнитьЧерезSQLCMD(параметрСТекстомЗапроса);
	
КонецФункции

Функция ВыводКоманды() Экспорт
	Возврат фВыводКоманды;
КонецФункции

Функция ТекстЗапроса_ВыполнитьБекап( Знач пИмяФайла)
	
	шаблонЗапросБекапа = "BACKUP DATABASE [%1] TO  DISK = N'%2' WITH NOFORMAT, INIT,  NAME = N'%1 FULL Backup', SKIP, NOREWIND, NOUNLOAD,COMPRESSION, STATS = 10";
	Возврат СтрШаблон( шаблонЗапросБекапа, фИмяБазы, пИмяФайла);
	
КонецФункции

Функция ВыполнитьЧерезSQLCMD( Знач пПараметрСТекстомЗапроса )
	
	командаЗапуска = Новый Команда;
	
	Если фЛог.Уровень() = УровниЛога.Отладка Тогда
		
		логКомандыЗапуска = Логирование.ПолучитьЛог(командаЗапуска.ИмяЛога());
		логКомандыЗапуска.УстановитьУровень(УровниЛога.Отладка);
		
	КонецЕсли;
	
	командаЗапуска.УстановитьКоманду("sqlcmd");
	командаЗапуска.ДобавитьПараметр("-S" + фСервер);
	командаЗапуска.ДобавитьПараметр("-U" + фПользователь);
	командаЗапуска.ДобавитьПараметр("-P" + фПароль);
	командаЗапуска.ДобавитьПараметр( пПараметрСТекстомЗапроса );
	командаЗапуска.ДобавитьПараметр("-b");
	
	командаЗапуска.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	
	кодВозврата = командаЗапуска.Исполнить();
	
	Если КодВозврата = 0 Тогда
		фВыводКоманды = командаЗапуска.ПолучитьВывод();
	Иначе
		фЛог.Ошибка(командаЗапуска.ПолучитьВывод());
	КонецЕсли;
	
	Возврат кодВозврата = 0;
	
КонецФункции

фЛог = Логирование.ПолучитьЛог(ИмяЛога());
фВыводКоманды = "";

