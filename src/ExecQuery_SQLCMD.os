#Использовать cmdline
#Использовать 1commands
#Использовать logos

Перем фЛог;

// Получить имя лога продукта
//
// Возвращаемое значение:
//  Строка   - имя лога продукта
//
Функция ИмяЛога() Экспорт
	Возврат "oscript.app.ExecQuery_SQLCMD";
КонецФункции

Функция ВыполнитьБекап( Знач пСервер, Знач пПользователь, Знач пПароль, Знач пИмяБазы, Знач пИмяФайлаБекапа ) Экспорт
	
	Если Не ЗначениеЗаполнено( пСервер ) Тогда
		
		фЛог.Ошибка( "Сервер не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пПользователь ) Тогда
		
		фЛог.Ошибка( "Пользователь не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пИмяФайлаБекапа ) Тогда
		
		фЛог.Ошибка( "Файл для бекапа не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пИмяБазы ) Тогда
		
		фЛог.Ошибка( "Файл для бекапа не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	параметрСТекстомЗапроса = "-Q""" + ТекстЗапроса_ВыполнитьБекап( пИмяБазы, пИмяФайлаБекапа ) + """";
	
	Возврат ВыполнитьЧерезSQLCMD(пСервер, пПользователь, пПароль, пИмяБазы, параметрСТекстомЗапроса);
	
КонецФункции

Функция ВыполнитьСкрипт( Знач пСервер, Знач пПользователь, Знач пПароль, Знач пИмяБазы, Знач пИмяФайлаСкрипта ) Экспорт
	
	Если Не ЗначениеЗаполнено( пСервер ) Тогда
		
		фЛог.Ошибка( "Сервер не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пПользователь ) Тогда
		
		фЛог.Ошибка( "Пользователь не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено( пИмяФайлаСкрипта ) Тогда
		
		фЛог.Ошибка( "Файл скрипта не указан" );
		Возврат Ложь;
		
	КонецЕсли;
	
	текстЗапроса = ПолучитьТекстИзФайла( пИмяФайлаСкрипта );
	
	Если текстЗапроса = Ложь Тогда
		фЛог.Ошибка( "Не удалось прочитать текст запроса из " + пИмяФайлаСкрипта );
		Возврат Ложь;
	КонецЕсли;
	
	параметрСТекстомЗапроса = "-i """ + пИмяФайлаСкрипта + """";
	
	Возврат ВыполнитьЧерезSQLCMD(пСервер, пПользователь, пПароль, пИмяБазы, параметрСТекстомЗапроса);
	
КонецФункции

Функция ПолучитьТекстИзФайла( Знач пИмяФайла )
	
	файлОбмена = Новый Файл(пИмяФайла);
	Данные = "";
	Если файлОбмена.Существует() Тогда
		чтениеТекста = Новый ЧтениеТекста(пИмяФайла, КодировкаТекста.UTF8);
		данные = чтениеТекста.Прочитать();
		чтениеТекста.Закрыть();
	Иначе
		Возврат Ложь;
	КонецЕсли;
	возврат данные;
КонецФункции

Функция ПолучитьПараметрыИзКоманднойСтроки( Знач пАргументы )
	
	Парсер = Новый ПарсерАргументовКоманднойСтроки();
	
	Парсер.ДобавитьПараметр("Команда");
	
	Парсер.ДобавитьПараметр("Сервер");
	Парсер.ДобавитьПараметр("Пользователь");
	Парсер.ДобавитьПараметр("Пароль");
	Парсер.ДобавитьПараметр("ИмяБазы");
	Парсер.ДобавитьПараметр("ПутьКФайлу");
	
	Параметры = Парсер.Разобрать(пАргументы);
	
	Если Не Параметры.Количество() = 6 Тогда
		
		Сообщить("Должно быть команда и 5 параметров.");
		Сообщить( "	backup Сервер Пользователь Пароль ИмяБазы ПутьКФайлуБекапа");
		Сообщить( "	execQuery Сервер Пользователь Пароль ИмяБазы ПутьКФайлуСкрипта");
		
		ЗавершитьРаботу(1);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

Функция ПолучитьПараметрСТекстомЗапроса( Знач пПараметры )
	
	Если ВРег( пПараметры["Команда"]) = ВРег("backup") Тогда
		
		шаблонЗапросБекапа = "BACKUP DATABASE [%1] TO  DISK = N'%2' WITH NOFORMAT, INIT,  NAME = N'%1 FULL Backup', SKIP, NOREWIND, NOUNLOAD,COMPRESSION, STATS = 10";
		текстЗапроса = СтрШаблон( шаблонЗапросБекапа, пПараметры["ИмяБазы"], пПараметры["ПутьКФайлу"]);
		
		параметрСТекстомЗапроса = "-Q""" + текстЗапроса + """";
		
	ИначеЕсли ВРег( пПараметры["Команда"]) = ВРег("execQuery") Тогда
		
		текстЗапроса = ПолучитьТекстИзФайла( пПараметры["ПутьКФайлу"] );
		
		Если текстЗапроса = Ложь Тогда
			фЛог.Ошибка( "Не удалось прочитать текст запроса из " + пПараметры["ПутьКФайлу"] );
			ЗавершитьРаботу(1);
		КонецЕсли;
		
		параметрСТекстомЗапроса = "-i """ + пПараметры["ПутьКФайлу"] + """"; 
		
	Иначе
		
		фЛог.Ошибка( "Неизвестная команда " + пПараметры["Команда"] );
		фЛог.Ошибка( "Поддерживаются только команды backup и execQuery" );
		ЗавершитьРаботу(1)
		
	КонецЕсли;
	
	Возврат параметрСТекстомЗапроса;
	
КонецФункции

Функция ТекстЗапроса_ВыполнитьБекап( Знач пИмяБазы, Знач пИмяФайла)
	
	шаблонЗапросБекапа = "BACKUP DATABASE [%1] TO  DISK = N'%2' WITH NOFORMAT, INIT,  NAME = N'%1 FULL Backup', SKIP, NOREWIND, NOUNLOAD,COMPRESSION, STATS = 10";
	Возврат СтрШаблон( шаблонЗапросБекапа, пИмяБазы, пИмяФайла);
	
КонецФункции

Функция ВыполнитьЧерезSQLCMD( Знач пСервер, Знач пПользователь, Знач пПароль, Знач пИмяБазы, Знач пПараметрСТекстомЗапроса )
	
	командаЗапуска = Новый Команда;
	
	Если фЛог.Уровень() = УровниЛога.Отладка Тогда
		
		логКомандыЗапуска = Логирование.ПолучитьЛог(командаЗапуска.ИмяЛога());
		логКомандыЗапуска.УстановитьУровень(УровниЛога.Отладка);
		
	КонецЕсли;
	
	командаЗапуска.УстановитьКоманду("sqlcmd");
	командаЗапуска.ДобавитьПараметр("-S" + пСервер);
	командаЗапуска.ДобавитьПараметр("-U" + пПользователь);
	командаЗапуска.ДобавитьПараметр("-P" + пПароль);
	командаЗапуска.ДобавитьПараметр( пПараметрСТекстомЗапроса );
	
	командаЗапуска.УстановитьИсполнениеЧерезКомандыСистемы( Ложь );
	
	кодВозврата = командаЗапуска.Исполнить();
	
	Если Не КодВозврата = 0 Тогда
		фЛог.Ошибка("Код возврата: " + КодВозврата);
		фЛог.Ошибка(командаЗапуска.ПолучитьВывод());
	КонецЕсли;
	
	фЛог.Информация(командаЗапуска.ПолучитьВывод());
	
	Возврат кодВозврата = 0;
	
КонецФункции

фЛог = Логирование.ПолучитьЛог(ИмяЛога());
//фЛог.УстановитьУровень(УровниЛога.Предупреждение);
//фЛог.УстановитьУровень(УровниЛога.Отладка);
